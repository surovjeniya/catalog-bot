import { Injectable, Logger } from '@nestjs/common';
import { Cron, CronExpression } from '@nestjs/schedule';
import { InjectBot } from 'nestjs-telegraf';
import { Commands } from 'src/enum/commands.enum';
import { TelegrafContext } from 'src/interface/telegraf.context';
import { LoggerService } from 'src/logger/logger.service';
import { UserEntity } from 'src/user/user.entity';
import { UserService } from 'src/user/user.service';
import { asyncEachIterator } from 'src/utils/async-each-iterator.utils';
import { Telegraf, TelegramError } from 'telegraf';
import { SendMessageToUsersDto } from './dto/send-message-to-users.dto';

@Injectable()
export class MailingService {
  private readonly logger = new Logger(MailingService.name);
  constructor(
    private readonly userService: UserService,
    private readonly loggerService: LoggerService,
    @InjectBot() private readonly bot: Telegraf<TelegrafContext>,
  ) {}

  async sendMessageToUsers(dto: SendMessageToUsersDto) {
    try {
      const users = await this.userService.find();
      asyncEachIterator(users, (user: UserEntity, i) => {
        if (!dto.image_path) {
          this.bot.telegram
            .sendMessage(user.telegram_id, dto.message, {
              parse_mode: 'HTML',
            })
            .then(() =>
              console.log({
                index: i,
                id: user.telegram_id,
                username: user.username ? user.username : null,
                status: 'Success',
              }),
            )
            .catch((error: TelegramError) =>
              console.log({
                index: i,
                id: user.telegram_id,
                username: user.username ? user.username : null,
                status: 'Error',
                message: error.message,
              }),
            );
        }
        if (dto.image_path) {
          this.bot.telegram
            .sendPhoto(user.telegram_id, dto.image_path, {
              caption: dto.message,
              parse_mode: 'HTML',
            })
            .catch((error: TelegramError) => {
              console.log({
                index: i,
                id: user.telegram_id,
                username: user.username ? user.username : null,
                status: 'Error',
                message: error.message,
              });
            })
            .then(() =>
              console.log({
                index: i,
                id: user.telegram_id,
                username: user.username ? user.username : null,
                status: 'Success',
              }),
            );
        }
      });
    } catch (e) {
      this.logger.error(`Error from ${this.sendMessageToUsers}`, e.message);
    }
  }

  // async sendMessageToUsers(messages: string[]) {
  //   const photo =
  //     'https://selleershub.ru/api/uploads/7_f0fc54a06c.png?updated_at=2023-04-13T10:02:11.243Z';
  //   const users = await this.userService.find();
  //   const ids = users.map((item) => item.telegram_id);
  //   for (let i = 0; i < ids.length; i++) {
  //     this.bot.telegram.sendPhoto(ids[i], photo, {
  //       parse_mode: 'HTML',
  //       caption:
  //         messages[
  //           Math.abs(Number((Math.random() * messages.length - 1).toFixed()))
  //         ],
  //     });
  //   }
  // }

  async sendMessageToSendToChatUsers(messages: string[]) {
    const photo =
      'https://selleershub.ru/api/uploads/7_f0fc54a06c.png?updated_at=2023-04-13T10:02:11.243Z';
    const logs = await this.loggerService.find();
    const matchedUsers = [];
    for (let i = 0; i < logs.length; i++) {
      if (logs[i].action === Commands['send-to-chat']) {
        matchedUsers.push(logs[i].telegram_id);
      }
    }
    const uniqueUsersSet = new Set(matchedUsers);
    const uniqueUsers = Array.from(uniqueUsersSet);

    for (let i = 0; i < uniqueUsers.length; i++) {
      this.bot.telegram.sendPhoto(uniqueUsers[i], photo, {
        parse_mode: 'HTML',
        caption:
          messages[
            Math.abs(Number((Math.random() * messages.length - 1).toFixed()))
          ],
      });
    }
  }

  // @Cron(CronExpression.EVERY_WEEK)
  // async sendNotificationToSendToChatUsersEveryWeek() {
  //   const messages = [
  //     `–î–ª—è –≤–∞—Å –ø–æ–¥–∞—Ä–æ–∫!üéÅ\n–°–∫–∞—á–∏–≤–∞–π—Ç–µ <a href="https://sellershub.ru/api/uploads/5_mobilnyh_prilozhenij_dlya_prodavczov_na_marketplejse_upravlyajte_svoimi_prodazhami_na_hodu_0cc498da54.pdf?updated_at=2023-04-13T07:11:41.230Z">—Å–ø–∏—Å–æ–∫ –∏–∑ 5 –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –¥–ª—è —Ä–∞–±–æ—Ç—ã –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–µ</a>-—É–ø—Ä–∞–≤–ª—è–π—Ç–µ –ø—Ä–æ–¥–∞–∂–∞–º–∏ –Ω–∞ —Ö–æ–¥—É!\n–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞—à–∏–º –±–æ—Ç–æ–º, —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ —Å–∞–π—Ç–µ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –±–æ–ª—å—à–µ –±–æ–Ω—É—Å–æ–≤.‚ö°Ô∏è`,
  //     `–î–ª—è –≤–∞—Å –ø–æ–¥–∞—Ä–æ–∫!üéÅ\n–°–∫–∞—á–∏–≤–∞–π—Ç–µ <a href="https://sellershub.ru/api/uploads/5_mobilnyh_prilozhenij_dlya_prodavczov_na_marketplejse_upravlyajte_svoimi_prodazhami_na_hodu_0cc498da54.pdf?updated_at=2023-04-13T07:11:41.230Z">—Å–ø–∏—Å–æ–∫ –∏–∑ 5 –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –¥–ª—è —Ä–∞–±–æ—Ç—ã –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–µ</a>-—É–ø—Ä–∞–≤–ª—è–π—Ç–µ –ø—Ä–æ–¥–∞–∂–∞–º–∏ –Ω–∞ —Ö–æ–¥—É!\n–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞—à–∏–º –±–æ—Ç–æ–º, —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ —Å–∞–π—Ç–µ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –±–æ–ª—å—à–µ –±–æ–Ω—É—Å–æ–≤.‚ö°Ô∏è`,
  //   ];
  //   return await this.sendMessageToSendToChatUsers(messages);
  // }

  // @Cron(CronExpression.EVERY_HOUR)
  // async sendNotificationToSendToChatUsersEveryHour() {
  //   const messages = [
  //     `–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞!‚ö°Ô∏è\n–ú—ã –¥–∞—Ä–∏–º –≤–∞–º <a href="https://sellershub.ru/api/uploads/Instrukcziya_po_SEO_optimizaczii_kartochek_tovara_lajfhaki_c76f241f45.pdf?updated_at=2023-04-13T07:11:39.818Z">–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ SEO-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∫–∞—Ä—Ç–æ—á–µ–∫ —Ç–æ–≤–∞—Ä–∞</a>\n–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–≤–æ–∏ —É—Å–ª—É–≥–∏ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç–µ—Å—å –Ω–∞ —Å–∞–π—Ç–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –µ—â–µ –±–æ–ª—å—à–µ –ø–æ–¥–∞—Ä–∫–æ–≤ üéÅ. `,
  //     `–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞!‚ö°Ô∏è\n–ú—ã –¥–∞—Ä–∏–º –≤–∞–º <a href="https://sellershub.ru/api/uploads/Instrukcziya_po_SEO_optimizaczii_kartochek_tovara_lajfhaki_c76f241f45.pdf?updated_at=2023-04-13T07:11:39.818Z">–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ SEO-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∫–∞—Ä—Ç–æ—á–µ–∫ —Ç–æ–≤–∞—Ä–∞</a>\n–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–≤–æ–∏ —É—Å–ª—É–≥–∏ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç–µ—Å—å –Ω–∞ —Å–∞–π—Ç–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –µ—â–µ –±–æ–ª—å—à–µ –ø–æ–¥–∞—Ä–∫–æ–≤ üéÅ. `,
  //   ];
  //   return await this.sendMessageToSendToChatUsers(messages);
  // }

  // @Cron(CronExpression.EVERY_DAY_AT_10PM)
  // async sendNotificationEveryDay() {
  //   const messages = [
  //     `–î–ª—è –≤–∞—Å –ø–æ–¥–∞—Ä–æ–∫ üéÅ\n–°–∫–∞—á–∏–≤–∞–π—Ç–µ <a href="https://sellershub.ru/api/uploads/5_servisov_dlya_analiza_konkurentov_9ca7abb16c.pdf?updated_at=2023-04-13T07:11:41.261Z)">5 —Å–µ—Ä–≤–∏—Å–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤</a>\n–ü—É–±–ª–∏–∫—É–π—Ç–µ —Å–≤–æ–∏ —É—Å–ª—É–≥–∏, –∏—â–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –ø–æ–ª—É—á–∞—Ç—å  –ø—Ä–∏—è—Ç–Ω—ã–µ –±–æ–Ω—É—Å—ã. ‚ö°Ô∏è`,
  //     `–î–ª—è –≤–∞—Å –ø–æ–¥–∞—Ä–æ–∫ üéÅ\n–°–∫–∞—á–∏–≤–∞–π—Ç–µ <a href="https://sellershub.ru/api/uploads/5_servisov_dlya_analiza_konkurentov_9ca7abb16c.pdf?updated_at=2023-04-13T07:11:41.261Z)">5 —Å–µ—Ä–≤–∏—Å–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤</a>\n–ü—É–±–ª–∏–∫—É–π—Ç–µ —Å–≤–æ–∏ —É—Å–ª—É–≥–∏, –∏—â–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –ø–æ–ª—É—á–∞—Ç—å  –ø—Ä–∏—è—Ç–Ω—ã–µ –±–æ–Ω—É—Å—ã. ‚ö°Ô∏è`,
  //   ];
  //   return await this.sendMessageToUsers(messages);
  // }

  // @Cron(CronExpression.EVERY_2_HOURS)
  // async sendNotificationEveryTwoHour() {
  //   const messages = [
  //     `–ü–æ–ª—É—á–∏—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–æ–¥—É–∫—Ç–∞–º –¥–ª—è —Ä–∞–±–æ—Ç—ã –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–µüöÄ\n–°–µ–≥–æ–¥–Ω—è –º—ã –¥–∞—Ä–∏–º –≤–∞–º <a href=""https://sellershub.ru/api/uploads/Lajfhaki_i_priemy_dlya_prodvizheniya_tovara_na_marketplejse_8432ca5fc8.pdf?updated_at=2023-04-13T07:11:41.372Z>–ª–∞–π—Ñ—Ö–∞–∫–∏ –∏ –ø—Ä–∏–µ–º—ã –¥–ª—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–µ</a>\n–ü—É–±–ª–∏–∫—É–π—Ç–µ —Å–≤–æ–∏ —É—Å–ª—É–≥–∏ —á–µ—Ä–µ–∑ –±–æ—Ç/ –∏—â–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏ üéÅ.`,
  //     `–ü–æ–ª—É—á–∏—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–æ–¥—É–∫—Ç–∞–º –¥–ª—è —Ä–∞–±–æ—Ç—ã –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–µüöÄ\n–°–µ–≥–æ–¥–Ω—è –º—ã –¥–∞—Ä–∏–º –≤–∞–º <a href=""https://sellershub.ru/api/uploads/Lajfhaki_i_priemy_dlya_prodvizheniya_tovara_na_marketplejse_8432ca5fc8.pdf?updated_at=2023-04-13T07:11:41.372Z>–ª–∞–π—Ñ—Ö–∞–∫–∏ –∏ –ø—Ä–∏–µ–º—ã –¥–ª—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–µ</a>\n–ü—É–±–ª–∏–∫—É–π—Ç–µ —Å–≤–æ–∏ —É—Å–ª—É–≥–∏ —á–µ—Ä–µ–∑ –±–æ—Ç/ –∏—â–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏ üéÅ.`,
  //   ];
  //   return await this.sendMessageToUsers(messages);
  // }

  // @Cron(CronExpression.EVERY_HOUR)
  // async sendNotificationEveryHour() {
  //   const messages = [
  //     `–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞ü§´\n–ú—ã –¥–∞—Ä–∏–º –≥–∞–π–¥—ã, —á–µ–∫-–ª–∏—Å—Ç—ã, –ø–æ–ª–µ–∑–Ω—ã–µ —Å–ø–∏—Å–∫–∏ –∏ –¥—Ä—É–≥–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞—Ö.\n–°–∫–∞—á–∏–≤–∞–π—Ç–µ <a href="https://sellershub.ru/api/uploads/Nabor_instrumentov_dlya_prodazh_na_marketplejse_ef5d3bcff2.pdf?updated_at=2023-04-13T07:11:41.385Z">–Ω–∞–±–æ—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–¥–∞–∂ –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞—Ö</a>.\n–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª—å—à–µ –ø–æ–ª–µ–∑–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞.`,
  //     `–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞ü§´\n–ú—ã –¥–∞—Ä–∏–º –≥–∞–π–¥—ã, —á–µ–∫-–ª–∏—Å—Ç—ã, –ø–æ–ª–µ–∑–Ω—ã–µ —Å–ø–∏—Å–∫–∏ –∏ –¥—Ä—É–≥–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞—Ö.\n<a href="https://sellershub.ru/api/uploads/Plan_dejstvij_dlya_rosta_pribyli_6166d01a3b.pdf?updated_at=2023-04-13T07:11:41.369Z">–°–∫–∞—á–∏–≤–∞–π—Ç–µ –ø–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è —Ä–æ—Å—Ç–∞ –ø—Ä–∏–±—ã–ª–∏</a>\n–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª—å—à–µ –ø–æ–ª–µ–∑–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞.`,
  //   ];
  //   return await this.sendMessageToUsers(messages);
  // }
}
